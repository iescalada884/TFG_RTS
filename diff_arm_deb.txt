>g-calend.adb

En el original hay una seccion entera llamada to_duration, el resto del archivo es exactamente igual
-----------------
      -- To_Duration --
      -----------------

      function To_Duration
        (tv_sec  : Long_Integer;
         tv_nsec : Long_Integer) return Duration
      is
         pragma Unsuppress (Overflow_Check);
      begin
         return Duration (tv_sec) + Duration (tv_nsec) / Nano_F;
      end To_Duration;

      ------------------------
      -- To_Struct_Timespec --
      ------------------------

      procedure To_Struct_Timespec
        (D       : Duration;
         tv_sec  : out Long_Integer;
         tv_nsec : out Long_Integer)
      is
         pragma Unsuppress (Overflow_Check);
         Secs      : Duration;
         Nano_Secs : Duration;

      begin
         --  Seconds extraction, avoid potential rounding errors

         Secs   := D - 0.5;
         tv_sec := Long_Integer (Secs);

         --  Nanoseconds extraction

         Nano_Secs := D - Duration (tv_sec);
         tv_nsec := Long_Integer (Nano_Secs * Nano);
      end To_Struct_Timespec;

.ads
      function To_Duration
        (tv_sec  : Long_Integer;
         tv_nsec : Long_Integer) return Duration;
      --  Struct timespec to Duration conversion

      procedure To_Struct_Timespec
        (D       : Duration;
         tv_sec  : out Long_Integer;
         tv_nsec : out Long_Integer);
      --  Duration to struct timespec conversion
> g-socket.adb
falta with System.C_Time;
Referencias a las funciones
function To_Timeval (Val : Timeval_Duration) return Timeval;
   --  Separate Val in seconds and microseconds

   function To_Duration (Val : Timeval) return Timeval_Duration;
   --  Reconstruct a Duration value from a Timeval record (seconds and
   --  microseconds).
En debian se usa System.C_Time en lugar de las funciones Timeval y To_Timeval
Aparece TO duarion
-----------------
   -- To_Duration --
   -----------------

   function To_Duration (Val : Timeval) return Timeval_Duration is
      Max_D : constant Long_Long_Integer := Long_Long_Integer (Forever - 0.5);
      Tv_sec_64 : constant Boolean := SOSC.SIZEOF_tv_sec = 8;
      --  Need to separate this condition into the constant declaration to
      --  avoid GNAT warning about "always true" or "always false".
   begin
      if Tv_sec_64 then
         --  Check for possible Duration overflow when Tv_Sec field is 64 bit
         --  integer.

         if Val.Tv_Sec > time_t (Max_D)
             or else
           (Val.Tv_Sec = time_t (Max_D)
              and then
            Val.Tv_Usec > suseconds_t ((Forever - Duration (Max_D)) * 1E6))
         then
            return Forever;
         end if;
      end if;

      return Duration (Val.Tv_Sec) + Duration (Val.Tv_Usec) * 1.0E-6;
   end To_Duration;

----------------
   -- To_Timeval --
   ----------------

   function To_Timeval (Val : Timeval_Duration) return Timeval is
      S  : time_t;
      uS : suseconds_t;

   begin
      --  If zero, set result as zero (otherwise it gets rounded down to -1)

      if Val = 0.0 then
         S  := 0;
         uS := 0;

      --  Normal case where we do round down

      else
         S  := time_t (Val - 0.5);
         uS := suseconds_t (1_000_000 * (Val - Selector_Duration (S)) - 0.5);

         if uS = -1 then
            --  It happen on integer duration
            uS := 0;
         end if;
      end if;

      return (S, uS);
   end To_Timeval;
> s-scaval
Referencias a IS_is16 que no estan en debian (posiblemente por la arquitectura de 32 bits?)
              IS_Iu16
              IS_Iz16
i-cexten
En debian aparecen estas lineas
   --  128-bit integer type available on 64-bit platforms:
   --  typedef int signed_128 __attribute__ ((mode (TI)));

   type Signed_128 is record
      low, high : unsigned_long_long;
   end record;
   pragma Convention (C_Pass_By_Copy, Signed_128);
   for Signed_128'Alignment use unsigned_long_long'Alignment * 2;


Definimos todos estos en el nuestro y en debian no
   type Unsigned_65 is mod 2 ** 65;
   for Unsigned_65'Size use 65;

   type Unsigned_66 is mod 2 ** 66;
   for Unsigned_66'Size use 66;

   type Unsigned_67 is mod 2 ** 67;
   for Unsigned_67'Size use 67;

   type Unsigned_68 is mod 2 ** 68;
   for Unsigned_68'Size use 68;

   type Unsigned_69 is mod 2 ** 69;
   for Unsigned_69'Size use 69;

   type Unsigned_70 is mod 2 ** 70;
   for Unsigned_70'Size use 70;

   type Unsigned_71 is mod 2 ** 71;
   for Unsigned_71'Size use 71;

   type Unsigned_72 is mod 2 ** 72;
   for Unsigned_72'Size use 72;

   type Unsigned_73 is mod 2 ** 73;
   for Unsigned_73'Size use 73;

   type Unsigned_74 is mod 2 ** 74;
   for Unsigned_74'Size use 74;

   type Unsigned_75 is mod 2 ** 75;
   for Unsigned_75'Size use 75;

   type Unsigned_76 is mod 2 ** 76;
   for Unsigned_76'Size use 76;

   type Unsigned_77 is mod 2 ** 77;
   for Unsigned_77'Size use 77;

   type Unsigned_78 is mod 2 ** 78;
   for Unsigned_78'Size use 78;

   type Unsigned_79 is mod 2 ** 79;
   for Unsigned_79'Size use 79;

   type Unsigned_80 is mod 2 ** 80;
   for Unsigned_80'Size use 80;

   type Unsigned_81 is mod 2 ** 81;
   for Unsigned_81'Size use 81;

   type Unsigned_82 is mod 2 ** 82;
   for Unsigned_82'Size use 82;

   type Unsigned_83 is mod 2 ** 83;
   for Unsigned_83'Size use 83;

   type Unsigned_84 is mod 2 ** 84;
   for Unsigned_84'Size use 84;

   type Unsigned_85 is mod 2 ** 85;
   for Unsigned_85'Size use 85;

   type Unsigned_86 is mod 2 ** 86;
   for Unsigned_86'Size use 86;

   type Unsigned_87 is mod 2 ** 87;
   for Unsigned_87'Size use 87;

   type Unsigned_88 is mod 2 ** 88;
   for Unsigned_88'Size use 88;

   type Unsigned_89 is mod 2 ** 89;
   for Unsigned_89'Size use 89;

   type Unsigned_90 is mod 2 ** 90;
   for Unsigned_90'Size use 90;

   type Unsigned_91 is mod 2 ** 91;
   for Unsigned_91'Size use 91;

   type Unsigned_92 is mod 2 ** 92;
   for Unsigned_92'Size use 92;

   type Unsigned_93 is mod 2 ** 93;
   for Unsigned_93'Size use 93;

   type Unsigned_94 is mod 2 ** 94;
   for Unsigned_94'Size use 94;

   type Unsigned_95 is mod 2 ** 95;
   for Unsigned_95'Size use 95;

   type Unsigned_96 is mod 2 ** 96;
   for Unsigned_96'Size use 96;

   type Unsigned_97 is mod 2 ** 97;
   for Unsigned_97'Size use 97;

   type Unsigned_98 is mod 2 ** 98;
   for Unsigned_98'Size use 98;

   type Unsigned_99 is mod 2 ** 99;
   for Unsigned_99'Size use 99;

   type Unsigned_100 is mod 2 ** 100;
   for Unsigned_100'Size use 100;

   type Unsigned_101 is mod 2 ** 101;
   for Unsigned_101'Size use 101;

   type Unsigned_102 is mod 2 ** 102;
   for Unsigned_102'Size use 102;

   type Unsigned_103 is mod 2 ** 103;
   for Unsigned_103'Size use 103;

   type Unsigned_104 is mod 2 ** 104;
   for Unsigned_104'Size use 104;

   type Unsigned_105 is mod 2 ** 105;
   for Unsigned_105'Size use 105;

   type Unsigned_106 is mod 2 ** 106;
   for Unsigned_106'Size use 106;

   type Unsigned_107 is mod 2 ** 107;
   for Unsigned_107'Size use 107;

   type Unsigned_108 is mod 2 ** 108;
   for Unsigned_108'Size use 108;

   type Unsigned_109 is mod 2 ** 109;
   for Unsigned_109'Size use 109;

   type Unsigned_110 is mod 2 ** 110;
   for Unsigned_110'Size use 110;

   type Unsigned_111 is mod 2 ** 111;
   for Unsigned_111'Size use 111;

   type Unsigned_112 is mod 2 ** 112;
   for Unsigned_112'Size use 112;

   type Unsigned_113 is mod 2 ** 113;
   for Unsigned_113'Size use 113;

   type Unsigned_114 is mod 2 ** 114;
   for Unsigned_114'Size use 114;

   type Unsigned_115 is mod 2 ** 115;
   for Unsigned_115'Size use 115;

   type Unsigned_116 is mod 2 ** 116;
   for Unsigned_116'Size use 116;

   type Unsigned_117 is mod 2 ** 117;
   for Unsigned_117'Size use 117;

   type Unsigned_118 is mod 2 ** 118;
   for Unsigned_118'Size use 118;

   type Unsigned_119 is mod 2 ** 119;
   for Unsigned_119'Size use 119;

   type Unsigned_120 is mod 2 ** 120;
   for Unsigned_120'Size use 120;

   type Unsigned_121 is mod 2 ** 121;
   for Unsigned_121'Size use 121;

   type Unsigned_122 is mod 2 ** 122;
   for Unsigned_122'Size use 122;

   type Unsigned_123 is mod 2 ** 123;
   for Unsigned_123'Size use 123;

   type Unsigned_124 is mod 2 ** 124;
   for Unsigned_124'Size use 124;

   type Unsigned_125 is mod 2 ** 125;
   for Unsigned_125'Size use 125;

   type Unsigned_126 is mod 2 ** 126;
   for Unsigned_126'Size use 126;

   type Unsigned_127 is mod 2 ** 127;
   for Unsigned_127'Size use 127;

   type Unsigned_128 is mod 2 ** 128;
   for Unsigned_128'Size use 128;

type Signed_65 is range -2 ** 64 .. 2 ** 64 - 1;
   for Signed_65'Size use 65;

   type Signed_66 is range -2 ** 65 .. 2 ** 65 - 1;
   for Signed_66'Size use 66;

   type Signed_67 is range -2 ** 66 .. 2 ** 66 - 1;
   for Signed_67'Size use 67;

   type Signed_68 is range -2 ** 67 .. 2 ** 67 - 1;
   for Signed_68'Size use 68;

   type Signed_69 is range -2 ** 68 .. 2 ** 68 - 1;
   for Signed_69'Size use 69;

   type Signed_70 is range -2 ** 69 .. 2 ** 69 - 1;
   for Signed_70'Size use 70;

   type Signed_71 is range -2 ** 70 .. 2 ** 70 - 1;
   for Signed_71'Size use 71;

   type Signed_72 is range -2 ** 71 .. 2 ** 71 - 1;
   for Signed_72'Size use 72;

   type Signed_73 is range -2 ** 72 .. 2 ** 72 - 1;
   for Signed_73'Size use 73;

   type Signed_74 is range -2 ** 73 .. 2 ** 73 - 1;
   for Signed_74'Size use 74;

   type Signed_75 is range -2 ** 74 .. 2 ** 74 - 1;
   for Signed_75'Size use 75;

   type Signed_76 is range -2 ** 75 .. 2 ** 75 - 1;
   for Signed_76'Size use 76;

   type Signed_77 is range -2 ** 76 .. 2 ** 76 - 1;
   for Signed_77'Size use 77;

   type Signed_78 is range -2 ** 77 .. 2 ** 77 - 1;
   for Signed_78'Size use 78;

   type Signed_79 is range -2 ** 78 .. 2 ** 78 - 1;
   for Signed_79'Size use 79;

   type Signed_80 is range -2 ** 79 .. 2 ** 79 - 1;
   for Signed_80'Size use 80;

   type Signed_81 is range -2 ** 80 .. 2 ** 80 - 1;
   for Signed_81'Size use 81;

   type Signed_82 is range -2 ** 81 .. 2 ** 81 - 1;
   for Signed_82'Size use 82;

   type Signed_83 is range -2 ** 82 .. 2 ** 82 - 1;
   for Signed_83'Size use 83;

   type Signed_84 is range -2 ** 83 .. 2 ** 83 - 1;
   for Signed_84'Size use 84;

   type Signed_85 is range -2 ** 84 .. 2 ** 84 - 1;
   for Signed_85'Size use 85;

   type Signed_86 is range -2 ** 85 .. 2 ** 85 - 1;
   for Signed_86'Size use 86;

   type Signed_87 is range -2 ** 86 .. 2 ** 86 - 1;
   for Signed_87'Size use 87;

   type Signed_88 is range -2 ** 87 .. 2 ** 87 - 1;
   for Signed_88'Size use 88;

   type Signed_89 is range -2 ** 88 .. 2 ** 88 - 1;
   for Signed_89'Size use 89;

   type Signed_90 is range -2 ** 89 .. 2 ** 89 - 1;
   for Signed_90'Size use 90;

   type Signed_91 is range -2 ** 90 .. 2 ** 90 - 1;
   for Signed_91'Size use 91;

   type Signed_92 is range -2 ** 91 .. 2 ** 91 - 1;
   for Signed_92'Size use 92;

   type Signed_93 is range -2 ** 92 .. 2 ** 92 - 1;
   for Signed_93'Size use 93;

   type Signed_94 is range -2 ** 93 .. 2 ** 93 - 1;
   for Signed_94'Size use 94;

   type Signed_95 is range -2 ** 94 .. 2 ** 94 - 1;
   for Signed_95'Size use 95;

   type Signed_96 is range -2 ** 95 .. 2 ** 95 - 1;
   for Signed_96'Size use 96;

   type Signed_97 is range -2 ** 96 .. 2 ** 96 - 1;
   for Signed_97'Size use 97;

   type Signed_98 is range -2 ** 97 .. 2 ** 97 - 1;
   for Signed_98'Size use 98;

   type Signed_99 is range -2 ** 98 .. 2 ** 98 - 1;
   for Signed_99'Size use 99;

   type Signed_100 is range -2 ** 99 .. 2 ** 99 - 1;
   for Signed_100'Size use 100;

   type Signed_101 is range -2 ** 100 .. 2 ** 100 - 1;
   for Signed_101'Size use 101;

   type Signed_102 is range -2 ** 101 .. 2 ** 101 - 1;
   for Signed_102'Size use 102;

   type Signed_103 is range -2 ** 102 .. 2 ** 102 - 1;
   for Signed_103'Size use 103;

   type Signed_104 is range -2 ** 103 .. 2 ** 103 - 1;
   for Signed_104'Size use 104;

   type Signed_105 is range -2 ** 104 .. 2 ** 104 - 1;
   for Signed_105'Size use 105;

   type Signed_106 is range -2 ** 105 .. 2 ** 105 - 1;
   for Signed_106'Size use 106;

   type Signed_107 is range -2 ** 106 .. 2 ** 106 - 1;
   for Signed_107'Size use 107;

   type Signed_108 is range -2 ** 107 .. 2 ** 107 - 1;
   for Signed_108'Size use 108;

   type Signed_109 is range -2 ** 108 .. 2 ** 108 - 1;
   for Signed_109'Size use 109;

   type Signed_110 is range -2 ** 109 .. 2 ** 109 - 1;
   for Signed_110'Size use 110;

   type Signed_111 is range -2 ** 110 .. 2 ** 110 - 1;
   for Signed_111'Size use 111;

   type Signed_112 is range -2 ** 111 .. 2 ** 111 - 1;
   for Signed_112'Size use 112;

   type Signed_113 is range -2 ** 112 .. 2 ** 112 - 1;
   for Signed_113'Size use 113;

   type Signed_114 is range -2 ** 113 .. 2 ** 113 - 1;
   for Signed_114'Size use 114;

   type Signed_115 is range -2 ** 114 .. 2 ** 114 - 1;
   for Signed_115'Size use 115;

   type Signed_116 is range -2 ** 115 .. 2 ** 115 - 1;
   for Signed_116'Size use 116;

   type Signed_117 is range -2 ** 116 .. 2 ** 116 - 1;
   for Signed_117'Size use 117;

   type Signed_118 is range -2 ** 117 .. 2 ** 117 - 1;
   for Signed_118'Size use 118;

   type Signed_119 is range -2 ** 118 .. 2 ** 118 - 1;
   for Signed_119'Size use 119;

   type Signed_120 is range -2 ** 119 .. 2 ** 119 - 1;
   for Signed_120'Size use 120;

   type Signed_121 is range -2 ** 120 .. 2 ** 120 - 1;
   for Signed_121'Size use 121;

   type Signed_122 is range -2 ** 121 .. 2 ** 121 - 1;
   for Signed_122'Size use 122;

   type Signed_123 is range -2 ** 122 .. 2 ** 122 - 1;
   for Signed_123'Size use 123;

   type Signed_124 is range -2 ** 123 .. 2 ** 123 - 1;
   for Signed_124'Size use 124;

   type Signed_125 is range -2 ** 124 .. 2 ** 124 - 1;
   for Signed_125'Size use 125;

   type Signed_126 is range -2 ** 125 .. 2 ** 125 - 1;
   for Signed_126'Size use 126;

   type Signed_127 is range -2 ** 126 .. 2 ** 126 - 1;
   for Signed_127'Size use 127;

   type Signed_128 is range -2 ** 127 .. 2 ** 127 - 1;
   for Signed_128'Size use 128;

Curiosamente s-caun128 es igual, posiblemente al quitar otros este dejo funcionar por falta de dependencias

Lo mismo con s-casi128

Los s-pack son todos iguales

En system.ads
En debian    Memory_Size  : constant := 2 ** Word_Size;
En el nuestro    Memory_Size  : constant := 2 ** Long_Integer'Size;

		   Default_Bit_Order : constant Bit_Order :=
                         Bit_Order'Val (Standard'Default_Bit_Order);
                    Default_Bit_Order : constant Bit_Order := Low_Order_First;
El order parece el mismo, asi que no debe afectar, memory tendria que revisarse
En el system.ali
En debian     73N4*Memory_Size 117r24
en el nuestro 73N4*Memory_Size 116r24
